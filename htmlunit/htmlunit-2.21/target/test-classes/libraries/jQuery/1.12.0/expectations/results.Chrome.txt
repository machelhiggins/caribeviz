ready: jQuery.isReady (2)
ready: jQuery ready (10)
basic: ajax (4)
basic: attributes (6)
basic: css (3)
basic: core (28)
basic: data (4)
basic: dimensions (3)
basic: event (1)
basic: manipulation (5)
basic: offset (3)
basic: selector (2)
basic: serialize (2)
basic: traversing (12)
basic: wrap (3)
core: Basic requirements (7)
core: jQuery() (30)
core: jQuery(selector, context) (3)
core: selector state (18)
core: globalEval (2)
core: noConflict (7)
core: noConflict (7)
core: trim (13)
core: type (28)
core: type for `Symbol` (2)
core: isPlainObject (16)
core: isPlainObject(Symbol) (2)
core: isFunction (19)
core: isNumeric (38)
core: isNumeric(Symbol) (2)
core: isXMLDoc - HTML (4)
core: XSS via location.hash (1)
core: isXMLDoc - XML (3)
core: isWindow (14)
core: jQuery('html') (18)
core: jQuery(tag-hyphenated elements) gh-1987 (17)
core: jQuery('massive html #7990') (3)
core: jQuery('html', context) (1)
core: jQuery(selector, xml).text(str) - loaded via xml document (2)
core: end() (3)
core: length (1)
core: get() (1)
core: toArray() (1)
core: inArray() (19)
core: get(Number) (2)
core: get(-Number) (2)
core: each(Function) (1)
core: slice() (7)
core: first()/last() (4)
core: map() (2)
core: jQuery.map (25)
core: jQuery.merge() (10)
core: jQuery.grep() (8)
core: jQuery.grep(Array-like) (7)
core: jQuery.extend(Object, Object) (28)
core: jQuery.extend(Object, Object {created with "defineProperties"}) (2)
core: jQuery.each(Object,Function) (23)
core: jQuery.each/map(undefined/null,Function) (1)
core: JIT compilation does not interfere with length retrieval (gh-2145) (4)
core: jQuery.makeArray (1, 14, 15)
core: jQuery.inArray (3)
core: jQuery.isEmptyObject (2)
core: jQuery.proxy (9)
core: jQuery.parseHTML (17)
core: jQuery.parseHTML (1)
core: jQuery.parseJSON (20)
core: jQuery.parseXML (8)
core: jQuery.camelCase() (7)
core: Conditional compilation compatibility (#13274) (3)
core: document ready when jQuery loaded asynchronously (#13655) (1)
core: Tolerating alias-masked DOM properties (#14074) (1)
core: Don't call window.onready (#14802) (1)
core: Iterability of jQuery objects (gh-1693) (1)
callbacks: jQuery.Callbacks( '' ) - no filter (28)
callbacks: jQuery.Callbacks( { } ) - no filter (28)
callbacks: jQuery.Callbacks( '' ) - filter (28)
callbacks: jQuery.Callbacks( { } ) - filter (28)
callbacks: jQuery.Callbacks( 'once' ) - no filter (28)
callbacks: jQuery.Callbacks( { 'once': true } ) - no filter (28)
callbacks: jQuery.Callbacks( 'once' ) - filter (28)
callbacks: jQuery.Callbacks( { 'once': true } ) - filter (28)
callbacks: jQuery.Callbacks( 'memory' ) - no filter (28)
callbacks: jQuery.Callbacks( { 'memory': true } ) - no filter (28)
callbacks: jQuery.Callbacks( 'memory' ) - filter (28)
callbacks: jQuery.Callbacks( { 'memory': true } ) - filter (28)
callbacks: jQuery.Callbacks( 'unique' ) - no filter (28)
callbacks: jQuery.Callbacks( { 'unique': true } ) - no filter (28)
callbacks: jQuery.Callbacks( 'unique' ) - filter (28)
callbacks: jQuery.Callbacks( { 'unique': true } ) - filter (28)
callbacks: jQuery.Callbacks( 'stopOnFalse' ) - no filter (28)
callbacks: jQuery.Callbacks( { 'stopOnFalse': true } ) - no filter (28)
callbacks: jQuery.Callbacks( 'stopOnFalse' ) - filter (28)
callbacks: jQuery.Callbacks( { 'stopOnFalse': true } ) - filter (28)
callbacks: jQuery.Callbacks( 'once memory' ) - no filter (28)
callbacks: jQuery.Callbacks( { 'once': true, 'memory': true } ) - no filter (28)
callbacks: jQuery.Callbacks( 'once memory' ) - filter (28)
callbacks: jQuery.Callbacks( { 'once': true, 'memory': true } ) - filter (28)
callbacks: jQuery.Callbacks( 'once unique' ) - no filter (28)
callbacks: jQuery.Callbacks( { 'once': true, 'unique': true } ) - no filter (28)
callbacks: jQuery.Callbacks( 'once unique' ) - filter (28)
callbacks: jQuery.Callbacks( { 'once': true, 'unique': true } ) - filter (28)
callbacks: jQuery.Callbacks( 'once stopOnFalse' ) - no filter (28)
callbacks: jQuery.Callbacks( { 'once': true, 'stopOnFalse': true } ) - no filter (28)
callbacks: jQuery.Callbacks( 'once stopOnFalse' ) - filter (28)
callbacks: jQuery.Callbacks( { 'once': true, 'stopOnFalse': true } ) - filter (28)
callbacks: jQuery.Callbacks( 'memory unique' ) - no filter (28)
callbacks: jQuery.Callbacks( { 'memory': true, 'unique': true } ) - no filter (28)
callbacks: jQuery.Callbacks( 'memory unique' ) - filter (28)
callbacks: jQuery.Callbacks( { 'memory': true, 'unique': true } ) - filter (28)
callbacks: jQuery.Callbacks( 'memory stopOnFalse' ) - no filter (28)
callbacks: jQuery.Callbacks( { 'memory': true, 'stopOnFalse': true } ) - no filter (28)
callbacks: jQuery.Callbacks( 'memory stopOnFalse' ) - filter (28)
callbacks: jQuery.Callbacks( { 'memory': true, 'stopOnFalse': true } ) - filter (28)
callbacks: jQuery.Callbacks( 'unique stopOnFalse' ) - no filter (28)
callbacks: jQuery.Callbacks( { 'unique': true, 'stopOnFalse': true } ) - no filter (28)
callbacks: jQuery.Callbacks( 'unique stopOnFalse' ) - filter (28)
callbacks: jQuery.Callbacks( { 'unique': true, 'stopOnFalse': true } ) - filter (28)
callbacks: jQuery.Callbacks( options ) - options are copied (1)
callbacks: jQuery.Callbacks.fireWith - arguments are copied (1)
callbacks: jQuery.Callbacks.remove - should remove all instances (1)
callbacks: jQuery.Callbacks.has (13)
callbacks: jQuery.Callbacks() - adding a string doesn't cause a stack overflow (1)
callbacks: jQuery.Callbacks() - disabled callback doesn't fire (gh-1790) (1)
deferred: jQuery.Deferred (23)
deferred: jQuery.Deferred - new operator (23)
deferred: jQuery.Deferred - chainability (10)
deferred: jQuery.Deferred.then - filtering (done) (4)
deferred: jQuery.Deferred.then - filtering (fail) (4)
deferred: jQuery.Deferred.then - filtering (progress) (3)
deferred: jQuery.Deferred.then - deferred (done) (3)
deferred: jQuery.Deferred.then - deferred (fail) (3)
deferred: jQuery.Deferred.then - deferred (progress) (3)
deferred: jQuery.Deferred.then - context (7)
deferred: jQuery.when (37)
deferred: jQuery.when - joined (119)
deferred: jQuery.when - resolved (6)
deprecated: bind/unbind (4)
deprecated: delegate/undelegate (2)
deprecated: size() (1)
support: zoom of doom (#13089) (1)
support: body background is not lost if set prior to loading jQuery (#9239) (2)
support: box-sizing does not affect jQuery.support.shrinkWrapBlocks (1)
support: A background on the testElement does not cause IE8 to crash (#9823) (1)
support: Check CSP (https://developer.mozilla.org/en-US/docs/Security/CSP) restrictions (2)
support: Verify that support tests resolve as expected per browser (38)
data: expando (1)
data: jQuery.data(div) (25)
data: jQuery.data({}) (25)
data: jQuery.data(window) (25)
data: jQuery.data(document) (25)
data: Expando cleanup (4)
data: Data is not being set on comment and text nodes (2)
data: acceptData (10)
data: jQuery().data() === undefined (#14101) (2)
data: .data() (5)
data: jQuery(Element).data(String, Object).data(String) (18)
data: jQuery(plain Object).data(String, Object).data(String) (16)
data: data-* attributes (43)
data: .data(Object) (4)
data: jQuery.removeData (10)
data: .removeData() (6)
data: JSON serialization (#8108) (1)
data: jQuery.data should follow html5 specification regarding camel casing (10)
data: jQuery.data should not miss data with preset hyphenated property names (2)
data: .data supports interoperable hyphenated/camelCase get/set of properties with arbitrary non-null|NaN|undefined values (24)
data: jQuery.data supports interoperable hyphenated/camelCase get/set of properties with arbitrary non-null|NaN|undefined values (24)
data: .removeData supports removal of hyphenated properties via array (#12786) (4)
data: Triggering the removeData should not throw exceptions. (#10080) (1)
data: Only check element attributes once when calling .data() - #8909 (2)
data: JSON data- attributes can have newlines (1)
data: enumerate data attrs on body (#14894) (1)
data: .data(prop) does not create expando (1)
queue: queue() with other types (14)
queue: queue(name) passes in the next item in the queue as a parameter (2)
queue: queue() passes in the next item in the queue as a parameter to fx queues (3)
queue: callbacks keep their place in the queue (5)
queue: delay() (2)
queue: clearQueue(name) clears the queue (2)
queue: clearQueue() clears the fx queue (1)
queue: fn.promise() - called when fx queue is empty (3)
queue: fn.promise( "queue" ) - called whenever last queue function is dequeued (5)
queue: fn.promise( "queue" ) - waits for animation to complete before resolving (2)
queue: .promise(obj) (2)
queue: delay() can be stopped (3)
queue: queue stop hooks (2)
attributes: jQuery.propFix integrity test (1)
attributes: attr(String) (50)
attributes: attr(String) on cloned elements, #9646 (4)
attributes: attr(String) in XML Files (3)
attributes: attr(String, Function) (2)
attributes: attr(Hash) (3)
attributes: attr(String, Object) (71)
attributes: attr - extending the boolean attrHandle (1)
attributes: attr(String, Object) - Loaded via XML document (2)
attributes: attr(String, Object) - Loaded via XML fragment (2)
attributes: attr('tabindex') (8)
attributes: attr('tabindex', value) (9)
attributes: removeAttr(String) (12)
attributes: removeAttr(String) in XML (7)
attributes: removeAttr(Multi String, variable space width) (8)
attributes: prop(String, Object) (17)
attributes: prop(String, Object) on null/undefined (14)
attributes: prop('tabindex') (11)
attributes: image.prop( 'tabIndex' ) (1)
attributes: prop('tabindex', value) (10)
attributes: removeProp(String) (6)
attributes: val() after modification (1)
attributes: val() (26)
attributes: val() with non-matching values on dropdown list (3)
attributes: val() respects numbers without exception (Bug #9319) (4)
attributes: val(String/Number) (9)
attributes: val(Function) (9)
attributes: val(Array of Numbers) (Bug #7123) (4)
attributes: val(Function) with incoming value (10)
attributes: val(select) after form.reset() (Bug #2551) (3)
attributes: addClass(String) (9)
attributes: addClass(Function) (9)
attributes: addClass(Function) with incoming value (52)
attributes: removeClass(String) - simple (8)
attributes: removeClass(Function) - simple (8)
attributes: removeClass(Function) with incoming value (52)
attributes: removeClass() removes duplicates (1)
attributes: removeClass(undefined) is a no-op (1)
attributes: toggleClass(String|boolean|undefined[, boolean]) (19)
attributes: toggleClass(Function[, boolean]) (19)
attributes: toggleClass(Function[, boolean]) with incoming value (14)
attributes: addClass, removeClass, hasClass (17)
attributes: addClass, removeClass, hasClass on many elements (19)
attributes: contents().hasClass() returns correct values (2)
attributes: hasClass correctly interprets non-space separators (#13835) (4)
attributes: coords returns correct values in IE6/IE7, see #10828 (1)
attributes: should not throw at $(option).val() (#14686) (1)
attributes: option value not trimmed when setting via parent select (1)
attributes: Insignificant white space returned for $(option).val() (#14858) (3)
attributes: SVG class manipulation (gh-2199) (12)
event: null or undefined handler (2)
event: on() with non-null,defined data (2)
event: Handler changes and .trigger() order (1)
event: on(), with data (4)
event: click(), with data (3)
event: on(), with data, trigger with data (4)
event: on(), multiple events at once (2)
event: on(), five events at once (1)
event: on(), multiple events at once and namespaces (7)
event: on(), namespace with special add (27)
event: on(), no data (1)
event: on/one/off(Object) (6)
event: on/off(Object), on/off(Object, String) (6)
event: on immediate propagation (2)
event: on bubbling, isDefaultPrevented, stopImmediatePropagation (3)
event: on(), iframes (1)
event: on(), trigger change on select (5)
event: on(), namespaced events, cloned events (18)
event: on(), multi-namespaced events (6)
event: namespace-only event binding is a no-op (2)
event: Empty namespace is ignored (1)
event: on(), with same function (2)
event: on(), make sure order is maintained (1)
event: on(), with different this object (4)
event: on(name, false), off(name, false) (3)
event: on(name, selector, false), off(name, selector, false) (3)
event: on()/trigger()/off() on plain object (7)
event: off(type) (1)
event: off(eventObject) (4)
event: hover() mouseenter mouseleave (1)
event: mouseover triggers mouseenter (1)
event: pointerover triggers pointerenter (1)
event: withinElement implemented with jQuery.contains() (1)
event: mouseenter, mouseleave don't catch exceptions (2)
event: trigger() shortcuts (6)
event: trigger() bubbling (18)
event: trigger(type, [data], [fn]) (16)
event: submit event bubbles on copied forms (#11649) (3)
event: change event bubbles on copied forms (#11796) (3)
event: trigger(eventObject, [data], [fn]) (28)
event: .trigger() bubbling on disconnected elements (#10489) (2)
event: .trigger() doesn't bubble load event (#10717) (1)
event: Delegated events in SVG (#10791; #13180) (2)
event: Delegated events in forms (#10844; #11145; #8165; #11382, #11764) (5)
event: Submit event can be stopped (#11049) (1)
event: on(beforeunload) (4)
event: jQuery.Event( type, props ) (6)
event: jQuery.Event properties (12)
event: .on()/.off() (65)
event: jQuery.off using dispatched jQuery.Event (1)
event: delegated event with delegateTarget-relative selector (3)
event: delegated event with selector matching Object.prototype property (#13203) (1)
event: delegated event with intermediate DOM manipulation (#13208) (1)
event: stopPropagation() stops directly-bound events on delegated target (1)
event: off all bound delegated events (2)
event: on with multiple delegated events (1)
event: delegated on with change (8)
event: delegated on with submit (2)
event: delegated off() with only namespaces (2)
event: Non DOM element events (1)
event: inline handler returning false stops default (1)
event: window resize (2)
event: focusin bubbles (2)
event: custom events with colons (#3533, #8272) (1)
event: .on and .off (9)
event: special on name mapping (7)
event: .on and .off, selective mixed removal (#10705) (7)
event: .on( event-map, null-selector, data ) #11130 (1)
event: clone() delegated events (#11076) (3)
event: checkbox state (#3827) (9)
event: hover event no longer special since 1.9 (1)
event: fixHooks extensions (2)
event: drag/drop events copy mouse-related event properties (gh-1925, gh-2009) (4)
event: focusin using non-element targets (2)
event: focusin from an iframe (1)
event: jQuery.ready promise (1)
event: Focusing iframe element (1)
event: triggerHandler(onbeforeunload) (1)
event: jQuery.ready synchronous load with long loading subresources (1)
event: change handler should be detached from element (2)
event: trigger click on checkbox, fires change event (1)
event: Namespace preserved when passed an Event (#12739) (4)
event: make sure events cloned correctly (18)
event: String.prototype.namespace does not cause trigger() to throw (#13360) (1)
event: Inline event result is returned (#13993) (1)
event: .off() removes the expando when there's no more data (2)
event: preventDefault() on focusin does not throw exception (1)
event: Donor event interference (10)
event: originalEvent property for IE8 (1)
event: originalEvent property for Chrome, Safari, Fx & Edge of simulated event (4)
event: Check order of focusin/focusout events (2)
event: focus-blur order (#12868) (5)
selector: element - jQuery only (7)
selector: id (26)
selector: class - jQuery only (4)
selector: name (5)
selector: selectors with comma (4)
selector: child and adjacent (27)
selector: attributes (54)
selector: disconnected nodes (1)
selector: disconnected nodes - jQuery only (3)
selector: attributes - jQuery.attr (35)
selector: jQuery.contains (16)
selector: jQuery.uniqueSort (15)
selector: Sizzle cache collides with multiple Sizzles on a page (4)
selector: Iframe dispatch should not affect jQuery (#13936) (1)
traversing: find(String) (1)
traversing: find(String) under non-elements (2)
traversing: find(leading combinator) (4)
traversing: find(node|jQuery object) (13)
traversing: is(String|undefined) (23)
traversing: is() against non-elements (#10178) (14)
traversing: is(jQuery) (19)
traversing: is() with :has() selectors (6)
traversing: is() with positional selectors (27)
traversing: index() (2)
traversing: index(Object|String|undefined) (16)
traversing: filter(Selector|undefined) (9)
traversing: filter(Function) (2)
traversing: filter(Element) (1)
traversing: filter(Array) (1)
traversing: filter(jQuery) (1)
traversing: filter() with positional selectors (19)
traversing: closest() (13)
traversing: closest() with positional selectors (1, 1, 2)
traversing: closest(jQuery) (8)
traversing: not(Selector|undefined) (11)
traversing: not(Element) (1)
traversing: not(Function) (1)
traversing: not(Array) (2)
traversing: not(jQuery) (1)
traversing: has(Element) (3)
traversing: has(Selector) (5)
traversing: has(Arrayish) (4)
traversing: addBack() (5)
traversing: siblings([String]) (6)
traversing: siblings([String]) - jQuery only (2)
traversing: children([String]) (2)
traversing: children([String]) - jQuery only (1)
traversing: parent([String]) (6)
traversing: parents([String]) (6)
traversing: parentsUntil([String]) (10)
traversing: next([String]) (6)
traversing: prev([String]) (5)
traversing: nextAll([String]) (5)
traversing: prevAll([String]) (5)
traversing: nextUntil([String]) (12)
traversing: prevUntil([String]) (11)
traversing: contents() (12)
traversing: sort direction (12)
traversing: add(String selector) (2)
traversing: add(String selector, String context) (1)
traversing: add(String html) (3)
traversing: add(jQuery) (4)
traversing: add(Element) (2)
traversing: add(Array elements) (1)
traversing: add(Window) (1)
traversing: add(NodeList|undefined|HTMLFormElement|HTMLSelectElement) (4)
traversing: add(String, Context) (6)
traversing: eq('-1') #10616 (3)
traversing: index(no arg) #10977 (2)
traversing: traversing non-elements with attribute filters (#12523) (5)
manipulation: text() (5)
manipulation: text(undefined) (1)
manipulation: text(String) (7)
manipulation: text(Function) (7)
manipulation: text(Function) with incoming value (2)
manipulation: append(String|Element|Array<Element>|jQuery) (78)
manipulation: append(Function) (78)
manipulation: append(param) to object, see #11280 (5)
manipulation: append(Function) returns String (4)
manipulation: append(Function) returns Element (2)
manipulation: append(Function) returns Array<Element> (2)
manipulation: append(Function) returns jQuery (2)
manipulation: append(Function) returns Number (2)
manipulation: XML DOM manipulation (#9960) (5)
manipulation: append the same fragment with events (Bug #6997, 5566) (2)
manipulation: append HTML5 sectioning elements (Bug #6485) (2)
manipulation: HTML5 Elements inherit styles from style rules (Bug #10501) (1)
manipulation: html(String) with HTML5 (Bug #6485) (2)
manipulation: html(String) tag-hyphenated elements (Bug #1987) (27)
manipulation: IE8 serialization bug (2)
manipulation: html() object element #10324 (1)
manipulation: append(xml) (1)
manipulation: appendTo(String) (4)
manipulation: appendTo(Element|Array<Element>) (2)
manipulation: appendTo(jQuery) (10)
manipulation: prepend(String) (2)
manipulation: prepend(Element) (1)
manipulation: prepend(Array<Element>) (1)
manipulation: prepend(jQuery) (1)
manipulation: prepend(Array<jQuery>) (1)
manipulation: prepend(Function) with incoming value -- String (4)
manipulation: prepend(Function) with incoming value -- Element (2)
manipulation: prepend(Function) with incoming value -- Array<Element> (2)
manipulation: prepend(Function) with incoming value -- jQuery (2)
manipulation: prependTo(String) (2)
manipulation: prependTo(Element) (1)
manipulation: prependTo(Array<Element>) (1)
manipulation: prependTo(jQuery) (1)
manipulation: prependTo(Array<jQuery>) (1)
manipulation: before(String) (1)
manipulation: before(Element) (1)
manipulation: before(Array<Element>) (1)
manipulation: before(jQuery) (1)
manipulation: before(Array<jQuery>) (1)
manipulation: before(Function) -- Returns String (1)
manipulation: before(Function) -- Returns Element (1)
manipulation: before(Function) -- Returns Array<Element> (1)
manipulation: before(Function) -- Returns jQuery (1)
manipulation: before(Function) -- Returns Array<jQuery> (1)
manipulation: before(no-op) (2)
manipulation: before and after w/ empty object (#10812) (1)
manipulation: .before() and .after() disconnected node (2)
manipulation: insert with .before() on disconnected node last (1)
manipulation: insert with .before() on disconnected node first (1)
manipulation: insert with .before() on disconnected node last (1)
manipulation: insert with .before() on disconnected node last (1)
manipulation: insertBefore(String) (1)
manipulation: insertBefore(Element) (1)
manipulation: insertBefore(Array<Element>) (1)
manipulation: insertBefore(jQuery) (1)
manipulation: .after(String) (1)
manipulation: .after(Element) (1)
manipulation: .after(Array<Element>) (1)
manipulation: .after(jQuery) (1)
manipulation: .after(Function) returns String (1)
manipulation: .after(Function) returns Element (1)
manipulation: .after(Function) returns Array<Element> (1)
manipulation: .after(Function) returns jQuery (1)
manipulation: .after(disconnected node) (2)
manipulation: insertAfter(String) (1)
manipulation: insertAfter(Element) (1)
manipulation: insertAfter(Array<Element>) (1)
manipulation: insertAfter(jQuery) (1)
manipulation: replaceWith(String|Element|Array<Element>|jQuery) (29)
manipulation: replaceWith(Function) (30)
manipulation: replaceWith(string) for more than one element (3)
manipulation: Empty replaceWith (trac-13401; trac-13596; gh-2204) (25)
manipulation: replaceAll(String) (2)
manipulation: replaceAll(Element) (2)
manipulation: replaceAll(Array<Element>) (3)
manipulation: replaceAll(jQuery) (3)
manipulation: jQuery.clone() (#8017) (2)
manipulation: append to multiple elements (#8070) (2)
manipulation: table manipulation (2)
manipulation: clone() (45)
manipulation: clone(script type=non-javascript) (#11359) (3)
manipulation: clone(form element) (Bug #3879, #6655) (5)
manipulation: clone(multiple selected options) (Bug #8129) (1)
manipulation: clone() on XML nodes (2)
manipulation: clone() on local XML nodes with html5 nodename (2)
manipulation: html(undefined) (1)
manipulation: html() on empty set (1)
manipulation: html(String|Number) (39)
manipulation: html(Function) (39)
manipulation: html( $.text() ) (1)
manipulation: html( fn ) returns $.text() (1)
manipulation: html(Function) with incoming value -- direct selection (4)
manipulation: html(Function) with incoming value -- jQuery.contents() (14)
manipulation: clone()/html() don't expose jQuery/Sizzle expandos (#12858) (2)
manipulation: remove() no filters (3)
manipulation: remove() with filters (8)
manipulation: remove() event cleaning (1)
manipulation: remove() in document order #13779 (1)
manipulation: detach() no filters (3)
manipulation: detach() with filters (8)
manipulation: detach() event cleaning (1)
manipulation: empty() (6)
manipulation: jQuery.cleanData (14)
manipulation: jQuery.cleanData eliminates all private data (gh-2127) (3)
manipulation: jQuery.cleanData eliminates all public data (2)
manipulation: domManip plain-text caching (trac-6779) (1)
manipulation: domManip executes scripts containing html comments or CDATA (trac-9221) (3)
manipulation: domManip tolerates window-valued document[0] in IE9/10 (trac-12266) (1)
manipulation: jQuery.clone - no exceptions for object elements #9587 (1)
manipulation: Cloned, detached HTML5 elems (#10667,10670) (7)
manipulation: Guard against exceptions when clearing safeChildNodes (1)
manipulation: Ensure oldIE creates a new set on appendTo (#8894) (5)
manipulation: html() - script exceptions bubble (#11743) (2)
manipulation: checked state is cloned with clone() (2)
manipulation: manipulate mixed jQuery and text (#12384, #12346) (2)
manipulation: script evaluation (#11795) (13)
manipulation: jQuery._evalUrl (#12838) (5)
manipulation: jQuery.htmlPrefilter (gh-1747) (5)
manipulation: insertAfter, insertBefore, etc do not work when destination is original element. Element is removed (#4087) (10)
manipulation: Index for function argument should be received (#13094) (2)
manipulation: Make sure jQuery.fn.remove can work on elements in documentFragment (1)
manipulation: Insert script with data-URI (gh-1887) (1)
wrap: wrap(String|Element) (19)
wrap: wrap(Function) (19)
wrap: wrap(Function) with index (#10177) (6)
wrap: wrap(String) consecutive elements (#10177) (12)
wrap: wrapAll(String) (5)
wrap: wrapAll(Element) (3)
wrap: wrapInner(String) (6)
wrap: wrapInner(Element) (5)
wrap: wrapInner(Function) returns String (6)
wrap: wrapInner(Function) returns Element (5)
wrap: unwrap() (9)
wrap: jQuery(<tag>) & wrap[Inner/All]() handle unknown elems (#10667) (2)
wrap: wrapping scripts (#10470) (2)
css: css(String|Hash) (43)
css: css() explicit and relative values (29)
css: css() non-px relative values (gh-1711) (16)
css: css(String, Object) (19)
css: css(String, Object) with negative values (4)
css: css(Array) (2)
css: css(String, Function) (3)
css: css(String, Function) with incoming value (3)
css: css(Object) where values are Functions (3)
css: css(Object) where values are Functions with incoming values (3)
css: show(); hide() (4)
css: show(); (18)
css: show() resolves correct default display #8099 (7)
css: show() resolves correct default display for detached nodes (13)
css: show() resolves correct default display #10227 (4)
css: show() resolves correct default display when iframe display:none #12904 (2)
css: toggle() (9)
css: hide hidden elements (bug #7141) (3)
css: jQuery.css(elem, 'height') doesn't clear radio buttons (bug #1095) (4)
css: internal ref to elem.runtimeStyle (bug #7608) (1)
css: computed margins (trac-3333; gh-2237) (2)
css: box model properties incorrectly returning % instead of px, see #10639 and #12088 (2)
css: jQuery.cssProps behavior, (bug #8402) (2)
css: widows & orphans #8936 (2)
css: can't get css for disconnected in IE<9, see #10254 and #8388 (2)
css: can't get background-position in IE<9, see #10796 (8)
css: percentage properties for bottom and right in IE<9 should not be incorrectly transformed to pixels, see #11311 (1)
css: percentage properties for left and top should be transformed to pixels, see #9505 (2)
css: Do not append px (#9548, #12990, #2792) (3)
css: css('width') and css('height') should respect box-sizing, see #11004 (4)
css: css('width') should work correctly before document ready (#14084) (1)
css: certain css values of 'normal' should be convertable to a number, see #8627 (3)
css: cssHooks - expand (15)
css: css opacity consistency across browsers (#12685) (4)
css: :visible/:hidden selectors (17)
css: Keep the last style if the new one isn't recognized by the browser (#14836) (2)
css: Reset the style if set to an empty string (1)
css: Clearing a Cloned Element's Style Shouldn't Clear the Original Element's Style (#8908) (24)
css: show() after hide() should always set display to initial value (#14750) (1)
css: Make sure initialized display value for disconnected nodes is correct (#13310) (4)
css: show() after hide() should always set display to initial value (#14750) (1)
css: Don't append px to CSS "order" value (#14049) (1)
css: Do not throw on frame elements from css method (#15098) (1)
skippedcss: get upper case alpha opacity in IE8 (0)
css: Don't default to a cached previously used wrong prefixed name (gh-2015) (3)
css: Don't detect fake set properties on a node when caching the prefixed version (1)
serialize: jQuery.param() (23)
serialize: jQuery.param() Constructed prop values (4)
serialize: serialize() (6)
ajax: Unit Testing Environment (2)
ajax: XMLHttpRequest - Attempt to block tests because of dangling XHR requests (IE) (1)
ajax: jQuery.ajax() - success callbacks (8)
ajax: jQuery.ajax() - success callbacks - (url, options) syntax (8)
ajax: jQuery.ajax() - execute js for crossOrigin when dataType option is provided (3)
ajax: jQuery.ajax() - do not execute js (crossOrigin) (2)
ajax: jQuery.ajax() - success callbacks (late binding) (8)
ajax: jQuery.ajax() - success callbacks (oncomplete binding) (8)
ajax: jQuery.ajax() - error callbacks (8)
ajax: jQuery.ajax() - textStatus and errorThrown values (4)
ajax: jQuery.ajax() - responseText on error (1)
ajax: jQuery.ajax() - retry with jQuery.ajax( this ) (2)
ajax: jQuery.ajax() - headers (5)
ajax: jQuery.ajax() - Accept header (1)
ajax: jQuery.ajax() - contentType (2)
ajax: jQuery.ajax() - protocol-less urls (1)
ajax: jQuery.ajax() - hash (3)
ajax: jQuery.ajax() - cross-domain detection (7)
ajax: jQuery.ajax() - abort (9)
ajax: jQuery.ajax() - events with context (12)
ajax: jQuery.ajax() - events without context (3)
ajax: #15118 - jQuery.ajax() - function without jQuery.event (1)
ajax: #15160 - jQuery.ajax() - request manually aborted in ajaxSend (3)
ajax: jQuery.ajax() - context modification (1)
ajax: jQuery.ajax() - context modification through ajaxSetup (3)
ajax: jQuery.ajax() - disabled globals (3)
ajax: jQuery.ajax() - xml: non-namespace elements inside namespaced elements (3)
ajax: jQuery.ajax() - xml: non-namespace elements inside namespaced elements (over JSONP) (3)
ajax: jQuery.ajax() - HEAD requests (2)
ajax: jQuery.ajax() - beforeSend (1)
ajax: jQuery.ajax() - beforeSend, cancel request manually (2)
ajax: jQuery.ajax() - dataType html (5)
ajax: jQuery.ajax() - synchronous request (1)
ajax: jQuery.ajax() - synchronous request with callbacks (2)
ajax: jQuery.ajax(), jQuery.get[Script|JSON](), jQuery.post(), pass-through request object (8)
ajax: jQuery.ajax() - cache (12)
ajax: #8205 - jQuery.ajax() - JSONP - re-use callbacks name - Same Domain (4)
ajax: #8205 - jQuery.ajax() - JSONP - re-use callbacks name - Cross Domain (4)
ajax: jQuery.ajax() - script, Remote (2)
ajax: jQuery.ajax() - script, Remote with POST (3)
ajax: jQuery.ajax() - script, Remote with scheme-less URL (2)
ajax: jQuery.ajax() - malformed JSON (2)
ajax: jQuery.ajax() - script by content-type (2)
ajax: jQuery.ajax() - JSON by content-type (5)
ajax: jQuery.ajax() - JSON by content-type disabled with options (6)
ajax: jQuery.ajax() - simple get (1)
ajax: jQuery.ajax() - simple post (1)
ajax: jQuery.ajax() - data option - empty bodies for non-GET requests (1)
ajax: jQuery.ajax() - If-Modified-Since support (cache) (4)
ajax: jQuery.ajax() - Etag support (cache) (4)
ajax: jQuery.ajax() - If-Modified-Since support (no cache) (4)
ajax: jQuery.ajax() - Etag support (no cache) (4)
ajax: jQuery.ajax() - failing cross-domain (non-existing) (1)
ajax: jQuery.ajax() - failing cross-domain (1)
ajax: jQuery.ajax() - atom+xml (1)
ajax: jQuery.ajax() - statusText (3)
ajax: jQuery.ajax() - statusCode (20)
ajax: jQuery.ajax() - transitive conversions (8)
ajax: jQuery.ajax() - overrideMimeType (2)
ajax: jQuery.ajax() - empty json gets to error callback instead of success callback. (1)
ajax: #2688 - jQuery.ajax() - beforeSend, cancel request (2)
ajax: #2806 - jQuery.ajax() - data option - evaluate function values (1)
ajax: #7531 - jQuery.ajax() - Location object as url (1)
ajax: #7578 - jQuery.ajax() - JSONP - default for cache option - Same Domain (1)
ajax: #7578 - jQuery.ajax() - JSONP - default for cache option - Cross Domain (1)
ajax: #8107 - jQuery.ajax() - multiple method signatures introduced in 1.5 (4)
ajax: #9887 - jQuery.ajax() - Context with circular references (#9887) (2)
ajax: #10093 - jQuery.ajax() - falsy url as argument (4)
ajax: #10093 - jQuery.ajax() - falsy url in settings object (4)
ajax: #11151 - jQuery.ajax() - parse error body (2)
ajax: #11426 - jQuery.ajax() - loading binary data shouldn't throw an exception in IE (1)
ajax: #11743 - jQuery.ajax() - script, throws exception (1)
ajax: #12004 - jQuery.ajax() - method is an alias of type - method set globally (3)
ajax: #12004 - jQuery.ajax() - method is an alias of type - type set globally (3)
ajax: #13276 - jQuery.ajax() - compatibility between XML documents from ajax requests and parsed string (1)
ajax: #13292 - jQuery.ajax() - converter is bypassed for 204 requests (3)
ajax: #13388 - jQuery.ajax() - responseXML (3)
ajax: #13922 - jQuery.ajax() - converter is bypassed for HEAD requests (3)
ajax: #14379 - jQuery.ajax() on unload (1)
ajax: #13240 - jQuery.ajax() - support non-RFC2616 methods (1, 0, 1)
ajax: #14683 - jQuery.ajax() - Exceptions thrown synchronously by xhr.send should be caught (4)
ajax: gh-2587 - when content-type not xml, but looks like one (1)
ajax: gh-2587 - when content-type not xml, but looks like one (1)
ajax: gh-2587 - when content-type not json, but looks like one (1)
ajax: gh-2587 - when content-type not html, but looks like one (1)
ajax: gh-2587 - when content-type not javascript, but looks like one (1)
ajax: gh-2587 - when content-type not ecmascript, but looks like one (1)
ajax: jQuery.ajaxPrefilter() - abort (1)
ajax: jQuery.ajaxSetup() (1)
ajax: jQuery.ajaxSetup({ timeout: Number }) - with global timeout (2)
ajax: jQuery.ajaxSetup({ timeout: Number }) with localtimeout (1)
ajax: #11264 - jQuery.domManip() - no side effect because of ajaxSetup or global events (1)
ajax: jQuery#load() - always use GET method even if it overrided through ajaxSetup (#11264) (1)
ajax: #11402 - jQuery.domManip() - script in comments are properly evaluated (2)
ajax: jQuery.get( String, Hash, Function ) - parse xml and use text() on nodes (2)
ajax: #8277 - jQuery.get( String, Function ) - data in ajaxSettings (1)
ajax: jQuery.getJSON( String, Hash, Function ) - JSON array (5)
ajax: jQuery.getJSON( String, Function ) - JSON object (2)
ajax: jQuery.getJSON( String, Function ) - JSON object with absolute url to local content (2)
ajax: jQuery.getScript( String, Function ) - with callback (2)
ajax: jQuery.getScript( String, Function ) - no callback (1)
ajax: #8082 - jQuery.getScript( String, Function ) - source as responseText (2)
ajax: jQuery.fn.load( String ) (2)
ajax: jQuery.fn.load() - 404 error callbacks (6)
ajax: jQuery.fn.load( String, null ) (2)
ajax: jQuery.fn.load( String, undefined ) (2)
ajax: jQuery.fn.load( URL_SELECTOR ) (1)
ajax: jQuery.fn.load( URL_SELECTOR with spaces ) (1)
ajax: jQuery.fn.load( String, Function ) - simple: inject text into DOM (2)
ajax: jQuery.fn.load( String, Function ) - check scripts (7)
ajax: jQuery.fn.load( String, Function ) - check file with only a script tag (3)
ajax: jQuery.fn.load( String, Function ) - dataFilter in ajaxSettings (2)
ajax: jQuery.fn.load( String, Object, Function ) (2)
ajax: jQuery.fn.load( String, String, Function ) (2)
ajax: jQuery.fn.load() - callbacks get the correct parameters (8)
ajax: #2046 - jQuery.fn.load( String, Function ) with ajaxSetup on dataType json (1)
ajax: #10524 - jQuery.fn.load() - data specified in ajaxSettings is merged in (1)
ajax: jQuery.post() - data (3)
ajax: jQuery.post( String, Hash, Function ) - simple with xml (4)
ajax: jQuery[get|post]( options ) - simple with xml (2)
ajax: jQuery.active (1)
effects: sanity check (1)
effects: show() basic (2)
effects: show() (27)
effects: show(Number) - other displays (15)
effects: Persist correct display value (3)
effects: animate(Hash, Object, Function) (1)
effects: animate relative values (12)
effects: animate negative height (1)
effects: animate negative margin (1)
effects: animate negative margin with px (1)
effects: animate negative padding (1)
effects: animate block as inline width/height (3)
effects: animate native inline width/height (3)
effects: animate block width/height (3)
effects: animate table width/height (1)
effects: animate table-row width/height (3)
effects: animate table-cell width/height (3)
effects: animate percentage(%) on width/height (2)
effects: animate resets overflow-x and overflow-y when finished (2)
effects: animate option { queue: false } (2)
effects: animate option { queue: true } (2)
effects: animate option { queue: 'name' } (5)
effects: animate with no properties (2)
effects: animate duration 0 (11)
effects: animate hyphenated properties (1)
effects: animate non-element (1)
effects: stop() (4)
effects: stop() - several in queue (5)
effects: stop(clearQueue) (4)
effects: stop(clearQueue, gotoEnd) (1)
effects: stop( queue, ..., ... ) - Stop single queues (3)
effects: toggle() (6)
effects: jQuery.fx.prototype.cur() - <1.8 Back Compat (7)
effects: Overflow and Display (4)
effects: CSS Auto to 0 (6)
effects: CSS Auto to 50 (6)
effects: CSS Auto to 100 (6)
effects: CSS Auto to show (5)
effects: CSS Auto to hide (4)
effects: JS Auto to 0 (6)
effects: JS Auto to 50 (6)
effects: JS Auto to 100 (6)
effects: JS Auto to show (5)
effects: JS Auto to hide (4)
effects: CSS 100 to 0 (6)
effects: CSS 100 to 50 (6)
effects: CSS 100 to 100 (6)
effects: CSS 100 to show (5)
effects: CSS 100 to hide (4)
effects: JS 100 to 0 (6)
effects: JS 100 to 50 (6)
effects: JS 100 to 100 (6)
effects: JS 100 to show (5)
effects: JS 100 to hide (4)
effects: CSS 50 to 0 (6)
effects: CSS 50 to 50 (6)
effects: CSS 50 to 100 (6)
effects: CSS 50 to show (5)
effects: CSS 50 to hide (4)
effects: JS 50 to 0 (6)
effects: JS 50 to 50 (6)
effects: JS 50 to 100 (6)
effects: JS 50 to show (5)
effects: JS 50 to hide (4)
effects: CSS 0 to 0 (6)
effects: CSS 0 to 50 (6)
effects: CSS 0 to 100 (6)
effects: CSS 0 to show (5)
effects: CSS 0 to hide (4)
effects: JS 0 to 0 (6)
effects: JS 0 to 50 (6)
effects: JS 0 to 100 (6)
effects: JS 0 to show (5)
effects: JS 0 to hide (4)
effects: Effects chaining (16)
effects: jQuery.show('fast') doesn't clear radio buttons (bug #1095) (4)
effects: interrupt toggle (24)
effects: animate with per-property easing (5)
effects: animate with CSS shorthand properties (11)
effects: hide hidden elements, with animation (bug #7141) (3)
effects: animate unit-less properties (#4966) (2)
effects: animate properties missing px w/ opacity as last (#9074) (6)
effects: callbacks should fire in correct order (#9100) (1)
effects: callbacks that throw exceptions will be removed (#5684) (2)
effects: animate will scale margin properties individually (2)
effects: Do not append px to 'fill-opacity' #9548 (1)
effects: line-height animates correctly (#13855) (12)
effects: jQuery.Animation( object, props, opts ) (4)
effects: Animate Option: step: function( percent, tween ) (1)
effects: Animate callbacks have correct context (2)
effects: User supplied callback called after show when fx off (#8892) (2)
effects: animate should set display for disconnected nodes (18)
effects: Animation callback should not show animated element as :animated (#7157) (1)
effects: Initial step callback should show element as :animated (#14623) (1)
effects: hide called on element within hidden parent should set display to none (#10045) (3)
effects: hide, fadeOut and slideUp called on element width height and width = 0 should set display to none (5)
effects: hide should not leave hidden inline elements visible (#14848) (2)
effects: Handle queue:false promises (10)
effects: multiple unqueued and promise (4)
effects: animate does not change start value for non-px animation (#7109) (1)
effects: non-px animation handles non-numeric start (#11971) (2)
effects: Animation callbacks (#11797) (16)
effects: Animate properly sets overflow hidden when animating width/height (#12117) (8)
effects: Each tick of the timer loop uses a fresh time (#12837) (3)
effects: Animations with 0 duration don't ease (#12273) (1)
effects: toggle state tests: toggle (#8685) (4)
effects: toggle state tests: slideToggle (#8685) (4)
effects: toggle state tests: fadeToggle (#8685) (4)
effects: jQuery.fx.start & jQuery.fx.stop hook points (3)
effects: .finish() completes all queued animations (11)
effects: .finish( false ) - unqueued animations (10)
effects: .finish( "custom" ) - custom queue animations (11)
effects: .finish() calls finish of custom queue functions (6)
effects: .finish() is applied correctly when multiple elements were animated (#13937) (3)
effects: slideDown() after stop() (#13483) (2)
effects: Respect display value on inline elements (#14824) (2)
offset: empty set (2)
offset: object without getBoundingClientRect (2)
offset: disconnected element (2)
offset: absolute (4)
offset: absolute (178)
offset: relative (60)
offset: static (80)
offset: fixed (34)
offset: table (4)
offset: scroll (28)
offset: body (4)
offset: chaining (3)
offset: offsetParent (13)
offset: fractions (see #7730 and #7885) (2)
offset: iframe scrollTop/Left (see gh-1945) (2)
dimensions: width() (9)
dimensions: width(Function) (9)
dimensions: width(Function(args)) (2)
dimensions: height() (9)
dimensions: height(Function) (9)
dimensions: height(Function(args)) (2)
dimensions: innerWidth() (6)
dimensions: innerHeight() (6)
dimensions: outerWidth() (11)
dimensions: child of a hidden elem (or unconnected node) has accurate inner/outer/Width()/Height() see #9441 #9300 (16)
dimensions: getting dimensions shouldn't modify runtimeStyle see #9233 (1)
dimensions: table dimensions (2)
dimensions: box-sizing:border-box child of a hidden elem (or unconnected node) has accurate inner/outer/Width()/Height() see #10413 (16)
dimensions: outerHeight() (11)
dimensions: passing undefined is a setter #5571 (4)
dimensions: getters on non elements should return null (8)
dimensions: setters with and without box-sizing:border-box (20)
dimensions: window vs. small document (1)
dimensions: window vs. large document (2)
dimensions: allow modification of coordinates argument (gh-1848) (1)
